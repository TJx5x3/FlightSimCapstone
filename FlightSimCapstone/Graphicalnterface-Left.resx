<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>